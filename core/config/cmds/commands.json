[
	{
		"name": "Rafraîchir",
		"logicalId": "refresh",
		"type": "action",
		"subType": "other"
	},
	{
		"name": "Etat connexion",
		"logicalId": "connectionState",
		"type": "info",
		"subType": "binary"
	},
	{
		"name": "Etat couleur",
		"logicalId": "colorState",
		"type": "info",
		"subType": "string",
		"generic_type": "LIGHT_COLOR"
	},
	{
		"name": "Etat luminosité",
		"logicalId": "brightnessState",
		"type": "info",
		"subType": "string",
		"unite": "%",
		"generic_type": "LIGHT_BRIGHTNESS"
	},
	{
		"name": "Etat rétroéclairage",
		"logicalId": "backlightThresholdState",
		"type": "info",
		"subType": "string",
		"unite": "%"
	},
	{
		"name": "Etat effet",
		"logicalId": "effectState",
		"type": "info",
		"subType": "string"
	},
	{
		"name": "Etat Hyperion",
		"logicalId": "hyperionState",
		"type": "info",
		"subType": "binary",
		"isVisible": 1
	},
	{
		"name": "Etat fondu",
		"logicalId": "smoothingState",
		"type": "info",
		"subType": "binary",
		"isVisible": 1
	},
	{
		"name": "Etat détection des bordures noir",
		"logicalId": "blackBorderState",
		"type": "info",
		"subType": "binary",
		"isVisible": 1
	},
	{
		"name": "Etat transfert",
		"logicalId": "forwarderState",
		"type": "info",
		"subType": "binary",
		"isVisible": 1
	},
	{
		"name": "Etat serveur Boblight",
		"logicalId": "boblightServerState",
		"type": "info",
		"subType": "binary",
		"isVisible": 1
	},
	{
		"name": "Etat platforme de capture",
		"logicalId": "grabberState",
		"type": "info",
		"subType": "binary",
		"isVisible": 1
	},
	{
		"name": "Etat capture USB",
		"logicalId": "v4lState",
		"type": "info",
		"subType": "binary",
		"isVisible": 1
	},
	{
		"name": "Etat capture audio",
		"logicalId": "audioState",
		"type": "info",
		"subType": "binary",
		"isVisible": 1
	},
	{
		"name": "Etat équipement LED",
		"logicalId": "ledDeviceState",
		"type": "info",
		"subType": "binary",
		"generic_type": "LIGHT_STATE",
		"isVisible": 1
	},
	{
		"name": "Couleur",
		"logicalId": "color",
		"type": "action",
		"subType": "color",
		"value": "colorState",
		"generic_type": "LIGHT_SET_COLOR"
	},
	{
		"name": "Luminosité",
		"logicalId": "brightness",
		"type": "action",
		"subType": "slider",
		"value": "brightnessState",
		"generic_type": "LIGHT_SLIDER"
	},
	{
		"name": "Rétroéclairage",
		"logicalId": "backlightThreshold",
		"type": "action",
		"subType": "slider",
		"value": "backlightThresholdState"
	},
	{
		"name": "Effets fournis",
		"logicalId": "providedEffects",
		"type": "action",
		"subType": "select",
		"configuration": {
			"listValue": "Aucun|Aucun;Atomic swirl|Atomic swirl;Blue mood blobs|Blue mood blobs;Breath|Breath;Candle|Candle;Cinema brighten lights|Cinema brighten lights;Cinema dim lights|Cinema dim lights;Cold mood blobs|Cold mood blobs;Collision|Collision;Color traces|Color traces;Double swirl|Double swirl;Fire|Fire;Flags Germany/Sweden|Flags Germany/Sweden;Full color mood blobs|Full color mood blobs;Green mood blobs|Green mood blobs;Knight rider|Knight rider;Led Test|Led Test;Light clock|Light clock;Lights|Lights;Notify blue|Notify blue;Pac-Man|Pac-Man;Plasma|Plasma;Police Lights Single|Police Lights Single;Police Lights Solid|Police Lights Solid;Rainbow mood|Rainbow mood;Rainbow swirl|Rainbow swirl;Rainbow swirl fast|Rainbow swirl fast;Random|Random;Red mood blobs|Red mood blobs;Sea waves|Sea waves;Snake|Snake;Sparks|Sparks;Strobe red|Strobe red;Strobe white|Strobe white;System Shutdown|System Shutdown;Trails|Trails;Trails color|Trails color;Warm mood blobs|Warm mood blobs;Waves with Color|Waves with Color;X-Mas|X-Mas"
		},
		"value": "effectState"
	},
	{
		"name": "Hyperion On",
		"logicalId": "hyperionOn",
		"type": "action",
		"subType": "other",
		"value": "hyperionState",
		"template": {
			"dashboard": "core::binarySwitch",
			"mobile": "core::binarySwitch"
		}
	},
	{
		"name": "Hyperion Off",
		"logicalId": "hyperionOff",
		"type": "action",
		"subType": "other",
		"value": "hyperionState",
		"template": {
			"dashboard": "core::binarySwitch",
			"mobile": "core::binarySwitch"
		}
	},
	{
		"name": "Fondu On",
		"logicalId": "smoothingOn",
		"type": "action",
		"subType": "other",
		"value": "smoothingState",
		"template": {
			"dashboard": "core::binarySwitch",
			"mobile": "core::binarySwitch"
		}
	},
	{
		"name": "Fondu Off",
		"logicalId": "smoothingOff",
		"type": "action",
		"subType": "other",
		"value": "smoothingState",
		"template": {
			"dashboard": "core::binarySwitch",
			"mobile": "core::binarySwitch"
		}
	},
	{
		"name": "Détection des bordures noir On",
		"logicalId": "blackBorderOn",
		"type": "action",
		"subType": "other",
		"value": "blackBorderState",
		"template": {
			"dashboard": "core::binarySwitch",
			"mobile": "core::binarySwitch"
		}
	},
	{
		"name": "Détection des bordures noir Off",
		"logicalId": "blackBorderOff",
		"type": "action",
		"subType": "other",
		"value": "blackBorderState",
		"template": {
			"dashboard": "core::binarySwitch",
			"mobile": "core::binarySwitch"
		}
	},
	{
		"name": "Transfert On",
		"logicalId": "forwarderOn",
		"type": "action",
		"subType": "other",
		"value": "forwarderState",
		"template": {
			"dashboard": "core::binarySwitch",
			"mobile": "core::binarySwitch"
		}
	},
	{
		"name": "Transfert Off",
		"logicalId": "forwarderOff",
		"type": "action",
		"subType": "other",
		"value": "forwarderState",
		"template": {
			"dashboard": "core::binarySwitch",
			"mobile": "core::binarySwitch"
		}
	},
	{
		"name": "Serveur Boblight On",
		"logicalId": "boblightServerOn",
		"type": "action",
		"subType": "other",
		"value": "boblightServerState",
		"template": {
			"dashboard": "core::binarySwitch",
			"mobile": "core::binarySwitch"
		}
	},
	{
		"name": "Serveur Boblight Off",
		"logicalId": "boblightServerOff",
		"type": "action",
		"subType": "other",
		"value": "boblightServerState",
		"template": {
			"dashboard": "core::binarySwitch",
			"mobile": "core::binarySwitch"
		}
	},
	{
		"name": "Platforme de capture On",
		"logicalId": "grabberOn",
		"type": "action",
		"subType": "other",
		"value": "grabberState",
		"template": {
			"dashboard": "core::binarySwitch",
			"mobile": "core::binarySwitch"
		}
	},
	{
		"name": "Platforme de capture Off",
		"logicalId": "grabberOff",
		"type": "action",
		"subType": "other",
		"value": "grabberState",
		"template": {
			"dashboard": "core::binarySwitch",
			"mobile": "core::binarySwitch"
		}
	},
	{
		"name": "Capture USB On",
		"logicalId": "v4lOn",
		"type": "action",
		"subType": "other",
		"value": "v4lState",
		"template": {
			"dashboard": "core::binarySwitch",
			"mobile": "core::binarySwitch"
		}
	},
	{
		"name": "Capture USB Off",
		"logicalId": "v4lOff",
		"type": "action",
		"subType": "other",
		"value": "v4lState",
		"template": {
			"dashboard": "core::binarySwitch",
			"mobile": "core::binarySwitch"
		}
	},
	{
		"name": "Capture audio On",
		"logicalId": "audioOn",
		"type": "action",
		"subType": "other",
		"value": "audioState",
		"template": {
			"dashboard": "core::binarySwitch",
			"mobile": "core::binarySwitch"
		}
	},
	{
		"name": "Capture audio Off",
		"logicalId": "audioOff",
		"type": "action",
		"subType": "other",
		"value": "audioState",
		"template": {
			"dashboard": "core::binarySwitch",
			"mobile": "core::binarySwitch"
		}
	},
	{
		"name": "Equipement LED On",
		"logicalId": "ledDeviceOn",
		"type": "action",
		"subType": "other",
		"value": "ledDeviceState",
		"generic_type": "LIGHT_ON",
		"template": {
			"dashboard": "core::binarySwitch",
			"mobile": "core::binarySwitch"
		}
	},
	{
		"name": "Equipement LED Off",
		"logicalId": "ledDeviceOff",
		"type": "action",
		"subType": "other",
		"value": "ledDeviceState",
		"generic_type": "LIGHT_OFF",
		"template": {
			"dashboard": "core::binarySwitch",
			"mobile": "core::binarySwitch"
		}
	},
	{
		"name": "Couleur aléatoire",
		"logicalId": "randomColor",
		"type": "action",
		"subType": "other"
	},
	{
		"name": "Effet aléatoire",
		"logicalId": "randomEffect",
		"type": "action",
		"subType": "other"
	},
	{
		"name": "Remise à zéro",
		"logicalId": "reset",
		"type": "action",
		"subType": "other"
	},
	{
		"name": "Effet utilisateur",
		"logicalId": "userEffect",
		"type": "action",
		"subType": "message"
	}
]